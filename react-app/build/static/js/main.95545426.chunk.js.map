{"version":3,"sources":["services/token.service.js","services/api.js","services/auth.service.js","components/Login.js","components/Register.js","services/user.service.js","services/hotels.service.js","components/Hotels.js","services/likes.service.js","components/Home.js","components/Main.js","components/Profile.js","common/EventBus.js","components/BoardUser.js","components/BoardModerator.js","components/BoardAdmin.js","components/Stats.js","services/residenceHistoryService.js","components/HotelDetails.js","App.js","reportWebVitals.js","index.js"],"names":["TokenService","getLocalRefreshToken","user","JSON","parse","localStorage","getItem","refreshToken","getLocalAccessToken","accessToken","updateLocalAccessToken","token","setItem","stringify","getUser","setUser","console","log","removeUser","removeItem","instance","axios","create","baseURL","headers","interceptors","request","use","config","error","Promise","reject","response","res","err","a","originalConfig","url","status","_retry","post","rs","data","AuthService","register","username","email","password","api","login","then","logout","getCurrentUser","required","value","className","role","Login","props","form","useRef","checkBtn","useState","setUsername","setPassword","loading","setLoading","message","setMessage","src","alt","onSubmit","e","preventDefault","current","validateAll","context","_errors","length","history","push","window","location","reload","resMessage","toString","ref","htmlFor","type","name","onChange","target","validations","disabled","style","display","validEmail","isEmail","vusername","vpassword","Register","setEmail","successful","setSuccessful","UserService","getPublicContent","get","getUserBoard","getModeratorBoard","getAdminBoard","updateUser","id","put","HotelService","getHotel","getPopular","getRecommendedByUserId","userId","getHotelById","getStats","findHotels","qty","days","children","activity","safety","comfort","price","distance","distance_from_Kazan","budget","campaign","active_recreation_on_the_water","fishing","football","volleyball","table_tennis","tennis","cycling","params","getResidenceHistory","HotelDetails","API_URL","like","hotelId","URLSearchParams","append","delete","Home","setContent","content2","setContent2","currentUser","setCurrentUser","formData","setFormData","useEffect","_content","handleChange","event","checked","numericData","Object","fromEntries","entries","map","key","min","max","Array","isArray","hotel","index","width","onClick","LikesService","createLikeById","catch","handleLike","to","photoList","link","Main","popularHotels","setPopularHotels","recommendedHotels","setRecommendedHotels","Profile","substring","substr","roles","likedHotels","eventBus","on","callback","document","addEventListener","detail","dispatch","dispatchEvent","CustomEvent","remove","removeEventListener","BoardUser","content","EventBus","BoardModerator","BoardAdmin","showModal","setShowModal","selectedUser","setSelectedUser","first_name","handleModalClose","join","Button","variant","second_name","otchestvo","phone_num","handleEditClick","Modal","show","onHide","Header","closeButton","Title","Body","Form","Group","controlId","Label","Control","placeholder","Footer","updatedUserData","prevContent","finally","drawChart","labels","item","values","parseInt","ctx","getElementById","Chart","datasets","label","backgroundColor","borderColor","borderWidth","options","scales","y","beginAtZero","height","checkInDate","checkOutDate","totalCost","review","grade","useParams","setHotel","histories","setHistories","newReview","setNewReview","newGrade","setNewGrade","setCheckInDate","setCheckOutDate","setTotalCost","ResidenceHistoryService","getResidenceHistoriesByHotelId","mainImages","slice","otherImages","img","whiteSpace","description","hotel_rev","user_rev","createResidenceHistory","prevHistories","App","showModeratorBoard","setShowModeratorBoard","showAdminBoard","setShowAdminBoard","undefined","includes","logOut","backgroundImage","backgroundSize","backgroundAttachment","minHeight","href","exact","path","component","Stats","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.95545426.chunk.js","sourcesContent":["const getLocalRefreshToken = () => {\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  return user?.refreshToken;\r\n};\r\n\r\nconst getLocalAccessToken = () => {\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  return user?.accessToken;\r\n};\r\n\r\nconst updateLocalAccessToken = (token) => {\r\n  let user = JSON.parse(localStorage.getItem(\"user\"));\r\n  user.accessToken = token;\r\n  localStorage.setItem(\"user\", JSON.stringify(user));\r\n};\r\n\r\nconst getUser = () => {\r\n  return JSON.parse(localStorage.getItem(\"user\"));\r\n};\r\n\r\nconst setUser = (user) => {\r\n  console.log(JSON.stringify(user));\r\n  localStorage.setItem(\"user\", JSON.stringify(user));\r\n};\r\n\r\nconst removeUser = () => {\r\n  localStorage.removeItem(\"user\");\r\n};\r\n\r\nconst TokenService = {\r\n  getLocalRefreshToken,\r\n  getLocalAccessToken,\r\n  updateLocalAccessToken,\r\n  getUser,\r\n  setUser,\r\n  removeUser,\r\n};\r\n\r\nexport default TokenService;\r\n","import axios from \"axios\";\r\nimport TokenService from \"./token.service\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://nature-navigator.ru/api\",\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\ninstance.interceptors.request.use(\r\n  (config) => {\r\n    const token = TokenService.getLocalAccessToken();\r\n    if (token) {\r\n      config.headers[\"Authorization\"] = 'Bearer ' + token;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\ninstance.interceptors.response.use(\r\n  (res) => {\r\n    return res;\r\n  },\r\n  async (err) => {\r\n    const originalConfig = err.config;\r\n\r\n    if (originalConfig.url !== \"/auth/signin\" && err.response) {\r\n      // Если access токен истёк\r\n      if (err.response.status === 401 && !originalConfig._retry) {\r\n        originalConfig._retry = true;\r\n\r\n        try {\r\n          const rs = await instance.post(\"/auth/refreshtoken\", {\r\n            refreshToken: TokenService.getLocalRefreshToken(),\r\n          });\r\n\r\n          const { accessToken } = rs.data;\r\n          TokenService.updateLocalAccessToken(accessToken);\r\n\r\n          return instance(originalConfig);\r\n        } catch (_error) {\r\n          return Promise.reject(_error);\r\n        }\r\n      }\r\n    }\r\n\r\n    return Promise.reject(err);\r\n  }\r\n);\r\n\r\nexport default instance;\r\n","import api from \"./api\";\r\nimport TokenService from \"./token.service\";\r\n\r\nconst register = (username, email, password) => {\r\n  return api.post(\"/auth/signup\", {\r\n    username,\r\n    email,\r\n    password\r\n  });\r\n};\r\n\r\nconst login = (username, password) => {\r\n  return api\r\n    .post(\"/auth/signin\", {\r\n      username,\r\n      password\r\n    })\r\n    .then((response) => {\r\n      if (response.data.accessToken) {\r\n        TokenService.setUser(response.data);\r\n      }\r\n\r\n      return response.data;\r\n    });\r\n};\r\n\r\nconst logout = () => {\r\n  TokenService.removeUser();\r\n};\r\n\r\nconst getCurrentUser = () => {\r\n  return JSON.parse(localStorage.getItem(\"user\"));\r\n};\r\n\r\nconst AuthService = {\r\n  register,\r\n  login,\r\n  logout,\r\n  getCurrentUser,\r\n};\r\n\r\nexport default AuthService;\r\n","import React, { useState, useRef } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst required = (value) => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst Login = (props) => {\r\n  const form = useRef();\r\n  const checkBtn = useRef();\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const onChangeUsername = (e) => {\r\n    const username = e.target.value;\r\n    setUsername(username);\r\n  };\r\n\r\n  const onChangePassword = (e) => {\r\n    const password = e.target.value;\r\n    setPassword(password);\r\n  };\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n\r\n    setMessage(\"\");\r\n    setLoading(true);\r\n\r\n    form.current.validateAll();\r\n\r\n    if (checkBtn.current.context._errors.length === 0) {\r\n      AuthService.login(username, password).then(\r\n        () => {\r\n          props.history.push(\"/profile\");\r\n          window.location.reload();\r\n        },\r\n        (error) => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          setLoading(false);\r\n          setMessage(resMessage);\r\n        }\r\n      );\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"col-md-12\">\r\n      <div className=\"card card-container\">\r\n        <img\r\n          src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n          alt=\"profile-img\"\r\n          className=\"profile-img-card\"\r\n        />\r\n\r\n        <Form onSubmit={handleLogin} ref={form}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"username\">Username</label>\r\n            <Input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"username\"\r\n              value={username}\r\n              onChange={onChangeUsername}\r\n              validations={[required]}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <Input\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={onChangePassword}\r\n              validations={[required]}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <button className=\"btn btn-primary btn-block\" disabled={loading}>\r\n              {loading && (\r\n                <span className=\"spinner-border spinner-border-sm\"></span>\r\n              )}\r\n              <span>Login</span>\r\n            </button>\r\n          </div>\r\n\r\n          {message && (\r\n            <div className=\"form-group\">\r\n              <div className=\"alert alert-danger\" role=\"alert\">\r\n                {message}\r\n              </div>\r\n            </div>\r\n          )}\r\n          <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState, useRef } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { isEmail } from \"validator\";\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst required = (value) => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst validEmail = (value) => {\r\n  if (!isEmail(value)) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This is not a valid email.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vusername = (value) => {\r\n  if (value.length < 3 || value.length > 20) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The username must be between 3 and 20 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vpassword = (value) => {\r\n  if (value.length < 6 || value.length > 40) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The password must be between 6 and 40 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst Register = (props) => {\r\n  const form = useRef();\r\n  const checkBtn = useRef();\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [successful, setSuccessful] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const onChangeUsername = (e) => {\r\n    const username = e.target.value;\r\n    setUsername(username);\r\n  };\r\n\r\n  const onChangeEmail = (e) => {\r\n    const email = e.target.value;\r\n    setEmail(email);\r\n  };\r\n\r\n  const onChangePassword = (e) => {\r\n    const password = e.target.value;\r\n    setPassword(password);\r\n  };\r\n\r\n  const handleRegister = (e) => {\r\n    e.preventDefault();\r\n\r\n    setMessage(\"\");\r\n    setSuccessful(false);\r\n\r\n    form.current.validateAll();\r\n\r\n    if (checkBtn.current.context._errors.length === 0) {\r\n      AuthService.register(username, email, password).then(\r\n        (response) => {\r\n          setMessage(response.data.message);\r\n          setSuccessful(true);\r\n        },\r\n        (error) => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          setMessage(resMessage);\r\n          setSuccessful(false);\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"col-md-12\">\r\n      <div className=\"card card-container\">\r\n        <img\r\n          src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n          alt=\"profile-img\"\r\n          className=\"profile-img-card\"\r\n        />\r\n\r\n        <Form onSubmit={handleRegister} ref={form}>\r\n          {!successful && (\r\n            <div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"username\">Username</label>\r\n                <Input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"username\"\r\n                  value={username}\r\n                  onChange={onChangeUsername}\r\n                  validations={[required, vusername]}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"email\">Email</label>\r\n                <Input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"email\"\r\n                  value={email}\r\n                  onChange={onChangeEmail}\r\n                  validations={[required, validEmail]}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"password\">Password</label>\r\n                <Input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  name=\"password\"\r\n                  value={password}\r\n                  onChange={onChangePassword}\r\n                  validations={[required, vpassword]}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <button className=\"btn btn-primary btn-block\">Sign Up</button>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {message && (\r\n            <div className=\"form-group\">\r\n              <div\r\n                className={\r\n                  successful ? \"alert alert-success\" : \"alert alert-danger\"\r\n                }\r\n                role=\"alert\"\r\n              >\r\n                {message}\r\n              </div>\r\n            </div>\r\n          )}\r\n          <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import api from \"./api\";\r\n\r\nconst getPublicContent = () => {\r\n  return api.get(\"/test/all\");\r\n};\r\n\r\nconst getUserBoard = () => {\r\n  return api.get(\"/test/user\");\r\n};\r\n\r\nconst getModeratorBoard = () => {\r\n  return api.get(\"/users\");\r\n};\r\n\r\nconst getAdminBoard = () => {\r\n  return api.get(\"/users\");\r\n};\r\nconst updateUser = (id, data) => {\r\n  return api.put(`/users/${id}`, data);\r\n}\r\n\r\nconst UserService = {\r\n  getPublicContent,\r\n  getUserBoard,\r\n  getModeratorBoard,\r\n  getAdminBoard,\r\n  updateUser\r\n};\r\n\r\nexport default UserService;\r\n","import api from \"./api\";\r\n\r\nconst getHotel = () => {\r\n    return api.get(\"/hotels\");\r\n};\r\n\r\nconst getPopular = () => {\r\n    return api.get(\"/hotels\");\r\n};\r\n\r\nconst getHotelById = (id) => {\r\n    return api.get(`/hotels/${id}`);\r\n};\r\n\r\nconst getStats = () => {\r\n    return api.get(\"/hotels/stats\");\r\n};\r\n\r\nconst getResidenceHistory = (id) => {\r\n    return api.get(`/hotels/${id}/residenceHistory`);\r\n};\r\n\r\nconst getRecommendedByUserId = (userId) => {\r\n    return api.get(`/hotels/getRecommendations/${userId}`);\r\n};\r\n\r\n\r\nconst findHotels = ({\r\n                        qty = \"1\",\r\n                        days = \"1\",\r\n                        children = \"0\",\r\n                        activity = \"3\",\r\n                        safety = \"3\",\r\n                        comfort = \"3\",\r\n                        price = \"3\",\r\n                        distance = \"3\",\r\n                        distance_from_Kazan = \"0\",\r\n                        budget = \"0\",\r\n                        campaign = \"0\",\r\n                        active_recreation_on_the_water = \"0\",\r\n                        fishing = \"0\",\r\n                        football = \"0\",\r\n                        volleyball = \"0\",\r\n                        table_tennis = \"0\",\r\n                        tennis = \"0\",\r\n                        cycling = \"0\"\r\n                    } = {}) => {\r\n    const params = {\r\n        qty,\r\n        days,\r\n        children,\r\n        activity,\r\n        safety,\r\n        comfort,\r\n        price,\r\n        distance,\r\n        distance_from_Kazan,\r\n        budget,\r\n        campaign,\r\n        active_recreation_on_the_water,\r\n        fishing,\r\n        football,\r\n        volleyball,\r\n        table_tennis,\r\n        tennis,\r\n        cycling\r\n    };\r\n    console.log(params);\r\n    return api.get(\"/hotels/findHotels\", { params });\r\n};\r\n\r\nconst HotelService = {\r\n    getHotel,\r\n    getPopular,\r\n    getRecommendedByUserId,\r\n    getHotelById,\r\n    getStats,\r\n    findHotels,\r\n    getResidenceHistory\r\n};\r\n\r\nexport default HotelService;\r\n","import React, { useEffect, useState } from 'react';\r\n//import axios from 'axios';\r\nimport HotelService from '../services/hotels.service';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction HotelDetails() {\r\n  const [hotel, setHotel] = useState(null);\r\n\r\n  useEffect(() => {\r\n    HotelService.getHotel().then(\r\n        (response) => {\r\n          setHotel(response.data);\r\n        },\r\n        (error) => {\r\n          const _content =\r\n              (error.response && error.response.data) ||\r\n              error.message ||\r\n              error.toString();\r\n\r\n          setHotel(_content);\r\n        }\r\n    );\r\n  });\r\n\r\n  if (!hotel) {\r\n    return <div>Loading...</div>;\r\n  }\r\n  else{\r\n    return (\r\n        <div>\r\n            hi\r\n          {hotel.map(hotel => (\r\n              <div key={hotel.id}>\r\n                <h2>{hotel.name}</h2>\r\n                <img src={hotel.photoList[0].link} alt={hotel.name} />\r\n                <p style={{ whiteSpace: 'pre-line' }}>{hotel.description}</p>\r\n                <Link to={`/hotel/${hotel.id}`}>View Details</Link>\r\n              </div>\r\n          ))}\r\n        </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default HotelDetails;\r\n","import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:8080/api/likes'; // URL вашего API, измените порт и базовый URL по необходимости\r\n\r\nclass LikesService {\r\n    // Получение всех записей\r\n    getAllLikes() {\r\n        return axios.get(API_URL);\r\n    }\r\n\r\n    // Получение одной записи по ID\r\n    getLikeById(id) {\r\n        return axios.get(`${API_URL}/${id}`);\r\n    }\r\n\r\n    // Создание новой записи\r\n    createLike(like) {\r\n        return axios.post(API_URL, like);\r\n    }\r\n\r\n    createLikeById(userId, hotelId) {\r\n        const params = new URLSearchParams();\r\n        params.append('user_id', userId);\r\n        params.append('hotel_id', hotelId);\r\n        return axios.post(`${API_URL}/byId`, null, { params });\r\n    }\r\n\r\n    // Обновление записи\r\n    updateLike(id, like) {\r\n        return axios.put(`${API_URL}/${id}`, like);\r\n    }\r\n\r\n    // Удаление записи по ID\r\n    deleteLike(id) {\r\n        return axios.delete(`${API_URL}/${id}`);\r\n    }\r\n\r\n    // Удаление всех записей\r\n    deleteAllLikes() {\r\n        return axios.delete(API_URL);\r\n    }\r\n}\r\n\r\nexport default new LikesService();\r\n","import React, { useState, useEffect } from \"react\";\r\nimport UserService from \"../services/user.service\";\r\nimport Hotel from \"./Hotels\";\r\nimport \"./home.css\";\r\nimport HotelService from \"../services/hotels.service\";\r\nimport { Link } from \"react-router-dom\";\r\nimport LikesService from \"../services/likes.service\";\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst Home = () => {\r\n  const [content, setContent] = useState(\"\");\r\n  const [content2, setContent2] = useState([]);\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [formData, setFormData] = useState({\r\n    qty: '0',\r\n    days: '0',\r\n    children: '0',\r\n    activity: '0',\r\n    safety: '0',\r\n    comfort: '0',\r\n    price: '0',\r\n    distance: '0',\r\n    campaign: '0',\r\n    active_recreation_on_the_water: false,\r\n    fishing: false,\r\n    football: false,\r\n    volleyball: false,\r\n    table_tennis: false,\r\n    tennis: false,\r\n    cycling: false,\r\n    distance_from_Kazan: '0',\r\n    budget: '0'\r\n  });\r\n\r\n  useEffect(() => {\r\n    UserService.getPublicContent().then(\r\n        (response) => {\r\n          setContent(response.data);\r\n        },\r\n        (error) => {\r\n          const _content =\r\n              (error.response && error.response.data) ||\r\n              error.message ||\r\n              error.toString();\r\n          setContent(_content);\r\n        }\r\n    );\r\n\r\n    HotelService.getHotel().then(\r\n        (response) => {\r\n          setContent2(response.data);\r\n          console.log(response.data);\r\n        },\r\n        (error) => {\r\n          console.error(\"Failed to fetch hotels:\", error);\r\n        }\r\n    );\r\n\r\n    const user = AuthService.getCurrentUser();\r\n    if (user) {\r\n      setCurrentUser(user);\r\n    }\r\n  }, []);\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value, type, checked } = event.target;\r\n    if (type === \"checkbox\") {\r\n      setFormData({\r\n        ...formData,\r\n        [name]: checked,\r\n      });\r\n    } else {\r\n      setFormData({\r\n        ...formData,\r\n        [name]: value,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const numericData = Object.fromEntries(\r\n        Object.entries(formData).map(([key, value]) => {\r\n          if (typeof value === \"boolean\") {\r\n            return [key, value ? \"1\" : \"0\"];\r\n          }\r\n          return [key, value];\r\n        })\r\n    );\r\n    HotelService.findHotels(numericData).then(\r\n        (response) => {\r\n          setContent2(response.data);\r\n          console.log(response.status);\r\n        },\r\n        (error) => {\r\n          const _content =\r\n              (error.response && error.response.data) ||\r\n              error.message ||\r\n              error.toString();\r\n          setContent2(_content);\r\n        }\r\n    );\r\n  };\r\n\r\n  function handleLike(hotelId) {\r\n    console.log(hotelId);\r\n    const userId = currentUser && currentUser.id;\r\n    LikesService.createLikeById(userId, hotelId)\r\n        .then((response) => {\r\n          console.log(\"Like added:\", response.data);\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Failed to add like:\", error);\r\n        });\r\n  }\r\n\r\n  return (\r\n      <div className=\"container\">\r\n        <div className=\"main\">\r\n          <form onSubmit={handleSubmit} className=\"form\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"qty\">Количество человек:</label>\r\n              <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"qty\"\r\n                  id=\"qty\"\r\n                  value={formData.qty}\r\n                  onChange={handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"days\">Количество дней:</label>\r\n              <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"days\"\r\n                  id=\"days\"\r\n                  value={formData.days}\r\n                  onChange={handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"children\">Количество детей:</label>\r\n              <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"children\"\r\n                  id=\"children\"\r\n                  value={formData.children}\r\n                  onChange={handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Семья:</label>\r\n              <div className=\"form-check\">\r\n                <input\r\n                    type=\"radio\"\r\n                    className=\"form-check-input\"\r\n                    name=\"campaign\"\r\n                    id=\"family\"\r\n                    value=\"family\"\r\n                    checked={formData.campaign === \"family\"}\r\n                    onChange={handleChange}\r\n                />\r\n                <label className=\"form-check-label\" htmlFor=\"family\">\r\n                  Семья\r\n                </label>\r\n              </div>\r\n              <div className=\"form-check\">\r\n                <input\r\n                    type=\"radio\"\r\n                    className=\"form-check-input\"\r\n                    name=\"campaign\"\r\n                    id=\"the_youth\"\r\n                    value=\"the_youth\"\r\n                    checked={formData.campaign === \"the_youth\"}\r\n                    onChange={handleChange}\r\n                />\r\n                <label className=\"form-check-label\" htmlFor=\"the_youth\">\r\n                  Молодёжь\r\n                </label>\r\n              </div>\r\n              <div className=\"form-check\">\r\n                <input\r\n                    type=\"radio\"\r\n                    className=\"form-check-input\"\r\n                    name=\"campaign\"\r\n                    id=\"old_friends\"\r\n                    value=\"old_friends\"\r\n                    checked={formData.campaign === \"old_friends\"}\r\n                    onChange={handleChange}\r\n                />\r\n                <label className=\"form-check-label\" htmlFor=\"old_friends\">\r\n                  Старые друзья\r\n                </label>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"activity\">Уровень активности отдыха:</label>\r\n              <input\r\n                  type=\"range\"\r\n                  className=\"form-control\"\r\n                  min=\"1\"\r\n                  max=\"5\"\r\n                  name=\"activity\"\r\n                  value={formData.activity}\r\n                  onChange={handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"safety\">Уровень безопасности:</label>\r\n              <input\r\n                  type=\"range\"\r\n                  className=\"form-control\"\r\n                  min=\"1\"\r\n                  max=\"5\"\r\n                  name=\"safety\"\r\n                  value={formData.safety}\r\n                  onChange={handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"comfort\">Уровень комфорта:</label>\r\n              <input\r\n                  type=\"range\"\r\n                  className=\"form-control\"\r\n                  min=\"1\"\r\n                  max=\"5\"\r\n                  name=\"comfort\"\r\n                  value={formData.comfort}\r\n                  onChange={handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"price\">Стоимость:</label>\r\n              <input\r\n                  type=\"range\"\r\n                  className=\"form-control\"\r\n                  min=\"1\"\r\n                  max=\"5\"\r\n                  name=\"price\"\r\n                  value={formData.price}\r\n                  onChange={handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"distance\">Расстояние:</label>\r\n              <input\r\n                  type=\"range\"\r\n                  className=\"form-control\"\r\n                  min=\"1\"\r\n                  max=\"5\"\r\n                  name=\"distance\"\r\n                  value={formData.distance}\r\n                  onChange={handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Активный отдых на воде:</label>\r\n              <div className=\"form-check\">\r\n                <input\r\n                    type=\"checkbox\"\r\n                    className=\"form-check-input\"\r\n                    name=\"active_recreation_on_the_water\"\r\n                    id=\"active_recreation_on_the_water\"\r\n                    checked={formData.active_recreation_on_the_water}\r\n                    onChange={handleChange}\r\n                />\r\n                <label\r\n                    className=\"form-check-label\"\r\n                    htmlFor=\"active_recreation_on_the_water\"\r\n                >\r\n                  Активный отдых на воде\r\n                </label>\r\n              </div>\r\n              <div className=\"form-check\">\r\n                <input\r\n                    type=\"checkbox\"\r\n                    className=\"form-check-input\"\r\n                    name=\"fishing\"\r\n                    id=\"fishing\"\r\n                    checked={formData.fishing}\r\n                    onChange={handleChange}\r\n                />\r\n                <label className=\"form-check-label\" htmlFor=\"fishing\">\r\n                  Рыбалка\r\n                </label>\r\n              </div>\r\n              <div className=\"form-check\">\r\n                <input\r\n                    type=\"checkbox\"\r\n                    className=\"form-check-input\"\r\n                    name=\"football\"\r\n                    id=\"football\"\r\n                    checked={formData.football}\r\n                    onChange={handleChange}\r\n                />\r\n                <label className=\"form-check-label\" htmlFor=\"football\">\r\n                  Футбол\r\n                </label>\r\n              </div>\r\n              <div className=\"form-check\">\r\n                <input\r\n                    type=\"checkbox\"\r\n                    className=\"form-check-input\"\r\n                    name=\"volleyball\"\r\n                    id=\"volleyball\"\r\n                    checked={formData.volleyball}\r\n                    onChange={handleChange}\r\n                />\r\n                <label className=\"form-check-label\" htmlFor=\"volleyball\">\r\n                  Волейбол\r\n                </label>\r\n              </div>\r\n              <div className=\"form-check\">\r\n                <input\r\n                    type=\"checkbox\"\r\n                    className=\"form-check-input\"\r\n                    name=\"table_tennis\"\r\n                    id=\"table_tennis\"\r\n                    checked={formData.table_tennis}\r\n                    onChange={handleChange}\r\n                />\r\n                <label className=\"form-check-label\" htmlFor=\"table_tennis\">\r\n                  Настольный теннис\r\n                </label>\r\n              </div>\r\n              <div className=\"form-check\">\r\n                <input\r\n                    type=\"checkbox\"\r\n                    className=\"form-check-input\"\r\n                    name=\"tennis\"\r\n                    id=\"tennis\"\r\n                    checked={formData.tennis}\r\n                    onChange={handleChange}\r\n                />\r\n                <label className=\"form-check-label\" htmlFor=\"tennis\">\r\n                  Большой теннис\r\n                </label>\r\n              </div>\r\n              <div className=\"form-check\">\r\n                <input\r\n                    type=\"checkbox\"\r\n                    className=\"form-check-input\"\r\n                    name=\"cycling\"\r\n                    id=\"cycling\"\r\n                    checked={formData.cycling}\r\n                    onChange={handleChange}\r\n                />\r\n                <label className=\"form-check-label\" htmlFor=\"cycling\">\r\n                  Велоспорт\r\n                </label>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"distance_from_Kazan\">\r\n                Максимальное расстояние от Казани (км):\r\n              </label>\r\n              <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"distance_from_Kazan\"\r\n                  id=\"distance_from_Kazan\"\r\n                  value={formData.distance_from_Kazan}\r\n                  onChange={handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"budget\">Максимальный бюджет (руб.):</label>\r\n              <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"budget\"\r\n                  id=\"budget\"\r\n                  value={formData.budget}\r\n                  onChange={handleChange}\r\n              />\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary\">\r\n              Search Hotels\r\n            </button>\r\n          </form>\r\n\r\n          <div>\r\n            <div className=\"container mt-4\">\r\n              <h2>Места отдыха по вашим параметрам:</h2>\r\n              <div className=\"row\">\r\n                {Array.isArray(content2) &&\r\n                    content2.map((hotel, index) => (\r\n                        <div\r\n                            className={`col-md-6 ${index < 3 ? \"highlighted\" : \"\"}`}\r\n                            key={hotel.id}\r\n                        >\r\n                          <div className=\"card mb-3\" style={{ width: \"100%\" }}>\r\n                            <button\r\n                                className=\"heart-btn\"\r\n                                onClick={() => handleLike(hotel.id)}\r\n                            >\r\n                              &#10084;\r\n                            </button>\r\n                            <Link to={`/hotel/${hotel.id}`}>\r\n                              <div className=\"card-body-number\">{index + 1}</div>\r\n                              <img\r\n                                  src={hotel.photoList[0].link}\r\n                                  className=\"card-img-top\"\r\n                                  alt={hotel.name}\r\n                              />\r\n                              <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">{hotel.name}</h5>\r\n                              </div>\r\n                            </Link>\r\n                          </div>\r\n                        </div>\r\n                    ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport HotelService from '../services/hotels.service';\r\nimport AuthService from '../services/auth.service';\r\nimport './main.css';\r\nimport LikesService from \"../services/likes.service\"; // Импорт стилей\r\n\r\nfunction Main() {\r\n    const [popularHotels, setPopularHotels] = useState([]);\r\n    const [recommendedHotels, setRecommendedHotels] = useState([]);\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n\r\n    useEffect(() => {\r\n        // Получаем список популярных отелей\r\n        HotelService.getPopular().then(response => {\r\n            setPopularHotels(response.data);\r\n        });\r\n\r\n        // Проверяем, авторизован ли пользователь\r\n        const user = AuthService.getCurrentUser();\r\n        if (user) {\r\n            setCurrentUser(user);\r\n            // Получаем список рекомендованных отелей для авторизованного пользователя\r\n            HotelService.getRecommendedByUserId(user.id).then(response => {\r\n                setRecommendedHotels(response.data);\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    function handleLike(hotelId) {\r\n        console.log(hotelId);\r\n        const userId = currentUser && currentUser.id; // Замените на ваше получение ID пользователя\r\n        LikesService.createLikeById(userId, hotelId).then(response => {\r\n            console.log('Like added:', response.data);\r\n            // Здесь можно добавить логику для обновления UI, например, обновить состояние\r\n        }).catch(error => {\r\n            console.error('Failed to add like:', error);\r\n        });\r\n    }\r\n\r\n\r\n    return (\r\n        <div >\r\n            <div className=\"container mt-4\">\r\n                <h2>Популярные места отдыха</h2>\r\n                <div className=\"d-flex overflow-auto\" >\r\n                    {popularHotels.map(hotel => (\r\n                        <div className=\"card-pop\" key={hotel.id}>\r\n\r\n                                {/*<button className=\"heart-btn\" onClick={() => handleLike(hotel.id)}>&#10084;</button> /!* Используйте HTML символ сердца *!/*/}\r\n\r\n\r\n                            <Link to={`/hotel/${hotel.id}`} >\r\n                                <img src={hotel.photoList[0].link} className=\"card-img-top\" alt={hotel.name} />\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">{hotel.name}</h5>\r\n                                {/*<Link to={`/hotel/${hotel.id}`} className=\"btn btn-primary\">Посмотреть детали</Link>*/}\r\n                            </div>\r\n                            </Link>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n\r\n            {currentUser && (\r\n                <div className=\"container mt-4\">\r\n                    <h2>Рекомендованные Вам места отдыха</h2>\r\n                    <div className=\"row\">\r\n                        {recommendedHotels.map((hotel, index) => (\r\n                            <div className={`col-md-4 ${index < 3 ? 'highlighted' : ''}`} key={hotel.id}>\r\n                                <div className=\"card mb-3\">\r\n\r\n                                    <div className=\"card-body-number\">{index + 1}</div>\r\n                                    <button className=\"heart-btn\" onClick={() => handleLike(hotel.id)}>&#10084;</button> {/* Используйте HTML символ сердца */}\r\n\r\n                                    <Link to={`/hotel/${hotel.id}`} >\r\n\r\n                                    <img src={hotel.photoList[0].link} className=\"card-img-top\" alt={hotel.name} />\r\n                                    <div className=\"card-body\">\r\n                                        <h5 className=\"card-title\">{hotel.name}</h5>\r\n\r\n                                    </div>\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst Profile = () => {\r\n  const currentUser = AuthService.getCurrentUser();\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <header className=\"jumbotron\">\r\n        <h3>\r\n          <strong>{currentUser.username}</strong> Profile\r\n        </h3>\r\n      </header>\r\n      <p>\r\n        <strong>Token:</strong> {currentUser.accessToken.substring(0, 20)} ...{\" \"}\r\n        {currentUser.accessToken.substr(currentUser.accessToken.length - 20)}\r\n      </p>\r\n      <p>\r\n        <strong>Id:</strong> {currentUser.id}\r\n      </p>\r\n      <p>\r\n        <strong>Email:</strong> {currentUser.email}\r\n      </p>\r\n      <strong>Authorities:</strong>\r\n      <ul>\r\n        {currentUser.roles &&\r\n          currentUser.roles.map((role, index) => <li key={index}>{role}</li>)}\r\n      </ul>\r\n        <ul>\r\n            {currentUser.likedHotels &&\r\n                currentUser.likedHotels.map((role, index) => <li key={index}>{role}</li>)}\r\n        </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","const eventBus = {\r\n  on(event, callback) {\r\n    document.addEventListener(event, (e) => callback(e.detail));\r\n  },\r\n  dispatch(event, data) {\r\n    document.dispatchEvent(new CustomEvent(event, { detail: data }));\r\n  },\r\n  remove(event, callback) {\r\n    document.removeEventListener(event, callback);\r\n  },\r\n};\r\n\r\nexport default eventBus;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport UserService from \"../services/user.service\";\r\nimport EventBus from \"../common/EventBus\";\r\n\r\nconst BoardUser = () => {\r\n  const [content, setContent] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    UserService.getUserBoard().then(\r\n      (response) => {\r\n        setContent(response.data);\r\n      },\r\n      (error) => {\r\n        if (error.response && error.response.status === 403) {\r\n          EventBus.dispatch(\"logout\");\r\n        }\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <header className=\"jumbotron\">\r\n        <h3>{content}</h3>\r\n      </header>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BoardUser;\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport UserService from \"../services/user.service\";\r\nimport EventBus from \"../common/EventBus\";\r\n\r\nconst BoardModerator = () => {\r\n  const [content, setContent] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    UserService.getModeratorBoard().then(\r\n      (response) => {\r\n        setContent(response.data);\r\n      },\r\n      (error) => {\r\n        const _content =\r\n          (error.response &&\r\n            error.response.data &&\r\n            error.response.data.message) ||\r\n          error.message ||\r\n          error.toString();\r\n\r\n        setContent(_content);\r\n\r\n        if (error.response && error.response.status === 403) {\r\n          EventBus.dispatch(\"logout\");\r\n        }\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <header className=\"jumbotron\">\r\n        <h3>{content}</h3>\r\n      </header>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BoardModerator;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Modal, Button, Form } from 'react-bootstrap';\r\nimport UserService from \"../services/user.service\";\r\nimport EventBus from \"../common/EventBus\";\r\n\r\nconst BoardAdmin = () => {\r\n  const [content, setContent] = useState(\"\");\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [selectedUser, setSelectedUser] = useState({});\r\n  const [formData, setFormData] = useState({ email: \"\", first_name: \"\" });\r\n\r\n  useEffect(() => {\r\n    UserService.getAdminBoard().then(\r\n      (response) => {\r\n        setContent(response.data);\r\n      },\r\n      (error) => {\r\n        const _content =\r\n          (error.response &&\r\n            error.response.data &&\r\n            error.response.data.message) ||\r\n          error.message ||\r\n          error.toString();\r\n\r\n        setContent(_content);\r\n\r\n        if (error.response && error.response.status === 403) {\r\n          EventBus.dispatch(\"logout\");\r\n        }\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  const handleEditClick = (user) => {\r\n    setSelectedUser(user);\r\n    setShowModal(true);\r\n    setFormData({\r\n      id: user.id,\r\n      username: user.username || \"\",\r\n      password: user.password || \"\",\r\n      email: user.email || \"\",\r\n      first_name: user.first_name || \"\",\r\n      second_name: user.second_name || \"\",\r\n      otchestvo: user.otchestvo || \"\",\r\n      phone_num: user.phone_num || \"\"\r\n    });\r\n  };\r\n\r\n  const handleModalClose = () => {\r\n    setShowModal(false);\r\n    setFormData({ email: \"\", first_name: \"\" });\r\n  };\r\n\r\n  const handleFormSubmit = () => {\r\n    const { id } = selectedUser;\r\n    const updatedUserData = {\r\n      id,\r\n      username: formData.username,\r\n      password: formData.password,\r\n      email: formData.email,\r\n      first_name: formData.first_name,\r\n      second_name: formData.second_name,\r\n      otchestvo: formData.otchestvo,\r\n      phone_num: formData.phone_num\r\n    };\r\n\r\n    // Отправка PUT-запроса с использованием updateUser\r\n    UserService.updateUser(id, updatedUserData)\r\n      .then(() => {\r\n        // Обновление данных пользователя в таблице\r\n        setContent((prevContent) => {\r\n          const updatedContent = prevContent.map((user) =>\r\n            user.id === id ? { ...user, ...updatedUserData } : user\r\n          );\r\n          return updatedContent;\r\n        });\r\n        console.log(\"User updated successfully\");\r\n      })\r\n      .catch((error) => {\r\n        // Обработка ошибок при отправке запроса\r\n        console.error(\"Error updating user:\", error);\r\n      })\r\n      .finally(() => {\r\n        // Закрываем модальное окно в любом случае\r\n        setShowModal(false);\r\n        setFormData({\r\n          id: \"\",\r\n          username: \"\",\r\n          password: \"\",\r\n          email: \"\",\r\n          first_name: \"\",\r\n          second_name: \"\",\r\n          otchestvo: \"\",\r\n          phone_num: \"\"\r\n        });\r\n      });\r\n  };\r\n\r\n  if (content===\"\") {\r\n    return <div>Loading...</div>;\r\n  }\r\n  else\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <header className=\"jumbotron\">\r\n        {content.length > 0 ? (\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>Username</th>\r\n                <th>Email</th>\r\n                <th>Password</th>\r\n                <th>Roles</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {content.map((user) => (\r\n                <tr key={user.id}>\r\n                  <td>{user.id}</td>\r\n                  <td>{user.username}</td>\r\n                  <td>{user.email}</td>\r\n                  <td>{user.password}</td>\r\n                  <td>{user.roles.length > 0\r\n                      ? user.roles.map((role) => role.name).join(\", \")\r\n                      : \"No roles\"}</td>\r\n                  <td>\r\n                    <Button variant=\"primary\" onClick={() => handleEditClick(user)}>\r\n                      Edit\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        ) : (\r\n          <p>No data available.</p>\r\n        )}\r\n\r\n        {/* Modal for editing user */}\r\n      <Modal show={showModal} onHide={handleModalClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Edit User</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group controlId=\"formUsername\">\r\n              <Form.Label>Username</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter username\"\r\n                value={formData.username}\r\n                onChange={(e) => setFormData({ ...formData, username: e.target.value })}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formPassword\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Enter password\"\r\n                value={formData.password}\r\n                onChange={(e) => setFormData({ ...formData, password: e.target.value })}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formEmail\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter email\"\r\n                value={formData.email}\r\n                onChange={(e) => setFormData({ ...formData, email: e.target.value })}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formFirstName\">\r\n              <Form.Label>First Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter first name\"\r\n                value={formData.first_name}\r\n                onChange={(e) => setFormData({ ...formData, first_name: e.target.value })}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formSecondName\">\r\n              <Form.Label>Second Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter second name\"\r\n                value={formData.second_name}\r\n                onChange={(e) => setFormData({ ...formData, second_name: e.target.value })}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formOtchestvo\">\r\n              <Form.Label>Otchestvo</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter otchestvo\"\r\n                value={formData.otchestvo}\r\n                onChange={(e) => setFormData({ ...formData, otchestvo: e.target.value })}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formPhoneNum\">\r\n              <Form.Label>Phone Number</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter phone number\"\r\n                value={formData.phone_num}\r\n                onChange={(e) => setFormData({ ...formData, phone_num: e.target.value })}\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleModalClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleFormSubmit}>\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      </header>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BoardAdmin;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Chart from \"chart.js/auto\"; \r\n\r\nimport UserService from \"../services/user.service\";\r\nimport EventBus from \"../common/EventBus\";\r\nimport HotelService from \"../services/hotels.service\";\r\n\r\nconst BoardUser = () => {\r\n  const [content, setContent] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    UserService.getUserBoard().then(\r\n      (response) => {\r\n        setContent(response.data);\r\n      },\r\n      (error) => {\r\n        const _content =\r\n          (error.response &&\r\n            error.response.data &&\r\n            error.response.data.message) ||\r\n          error.message ||\r\n          error.toString();\r\n\r\n        setContent(_content);\r\n\r\n        if (error.response && error.response.status === 403) {\r\n          EventBus.dispatch(\"logout\");\r\n        }\r\n      }\r\n    );\r\n\r\n    HotelService.getStats().then(\r\n      (response) => {\r\n        setContent(response.data);\r\n        drawChart(response.data); // Вызываем функцию отрисовки диаграммы\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  const drawChart = (data) => {\r\n    const labels = data.map((item) => item[0]);\r\n    const values = data.map((item) => parseInt(item[1], 10));\r\n\r\n    const ctx = document.getElementById(\"hotelChart\");\r\n\r\n    new Chart(ctx, {\r\n      type: \"bar\",\r\n      data: {\r\n        labels: labels,\r\n        datasets: [\r\n          {\r\n            label: \"Количество посещений\",\r\n            data: values,\r\n            backgroundColor: \"rgba(75,192,192,0.2)\",\r\n            borderColor: \"rgba(75,192,192,1)\",\r\n            borderWidth: 1,\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        scales: {\r\n          y: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <header className=\"jumbotron\">\r\n        {/* <h3>{content}</h3> */}\r\n        <h3>Статистика посещений каждого отеля</h3>\r\n        <canvas id=\"hotelChart\" width=\"400\" height=\"200\"></canvas>\r\n      </header>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BoardUser;\r\n","import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:8080/api/residenceHistories'; // Измените URL на ваш базовый URL, если он отличается\r\n\r\nclass ResidenceHistoryService {\r\n    getAllResidenceHistories() {\r\n        return axios.get(API_URL);\r\n    }\r\n\r\n    getResidenceHistoryById(id) {\r\n        return axios.get(`${API_URL}/${id}`);\r\n    }\r\n\r\n    createResidenceHistory(data) {\r\n        return axios.post(API_URL, data, {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n    }\r\n\r\n    updateResidenceHistory(id, data) {\r\n        return axios.put(`${API_URL}/${id}`, data);\r\n    }\r\n\r\n    deleteResidenceHistory(id) {\r\n        return axios.delete(`${API_URL}/${id}`);\r\n    }\r\n\r\n    insertResidenceHistory(formData) {\r\n        const params = new URLSearchParams();\r\n        params.append('checkInDate', formData.checkInDate);\r\n        params.append('checkOutDate', formData.checkOutDate);\r\n        params.append('totalCost', formData.totalCost);\r\n        params.append('review', formData.review);\r\n        params.append('grade', formData.grade);\r\n        params.append('userId', formData.userId);\r\n        params.append('hotelId', formData.hotelId);\r\n        return axios.post(`${API_URL}/insert`, params);\r\n    }\r\n\r\n    getRatings() {\r\n        return axios.get(`${API_URL}/ratings`);\r\n    }\r\n\r\n    getMaxIdHotel() {\r\n        return axios.get(`${API_URL}/maxIdHotel`);\r\n    }\r\n\r\n    getResidenceHistoriesByHotelId(hotelId) {\r\n        return axios.get(`${API_URL}/byHotel/${hotelId}`);\r\n    }\r\n}\r\n\r\nexport default new ResidenceHistoryService();\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport HotelService from '../services/hotels.service';\r\nimport ResidenceHistoryService from '../services/residenceHistoryService';\r\nimport AuthService from \"../services/auth.service\";\r\nimport \"./HotelDetails.css\"; // Убедитесь, что путь к файлу CSS корректен\r\n\r\n\r\n\r\nfunction HotelDetails() {\r\n    const { id } = useParams();\r\n    const [hotel, setHotel] = useState(null);\r\n    const [histories, setHistories] = useState([]);\r\n    const [newReview, setNewReview] = useState(\"\");\r\n    const [newGrade, setNewGrade] = useState(1);\r\n    const [checkInDate, setCheckInDate] = useState(\"\");\r\n    const [checkOutDate, setCheckOutDate] = useState(\"\");\r\n    const [totalCost, setTotalCost] = useState(0);\r\n    const currentUser = AuthService.getCurrentUser();\r\n\r\n    useEffect(() => {\r\n        HotelService.getHotelById(id).then(\r\n            response => setHotel(response.data),\r\n            error => console.log(\"Error fetching hotel details:\", error)\r\n        );\r\n\r\n        ResidenceHistoryService.getResidenceHistoriesByHotelId(id).then(\r\n            response => setHistories(response.data),\r\n            error => console.log(\"Error fetching residence histories:\", error)\r\n        );\r\n        console.log(histories);\r\n    }, [id]);\r\n\r\n    const handleSubmitReview = () => {\r\n        if (!currentUser) return;\r\n\r\n        const formData = {\r\n            checkInDate,\r\n            checkOutDate,\r\n            totalCost,\r\n            review: newReview,\r\n            grade: parseInt(newGrade, 10),\r\n\r\n            hotel_rev: {id:parseInt(id, 10)},\r\n            user_rev: {id: parseInt(currentUser.id)}\r\n        };\r\n\r\n        ResidenceHistoryService.createResidenceHistory(formData).then(\r\n            response => {\r\n                // Предполагаем, что response.data содержит добавленный отзыв\r\n                // Обновляем список отзывов добавляя новый отзыв\r\n                setHistories(prevHistories => [...prevHistories, response.data]);\r\n                // Сброс формы\r\n                setNewReview(\"\");\r\n                setNewGrade(1);\r\n                setCheckInDate(\"\");\r\n                setCheckOutDate(\"\");\r\n                setTotalCost(0);\r\n            },\r\n            error => {\r\n                console.log(\"Error posting review:\", error);\r\n            }\r\n        );\r\n    };\r\n\r\n    if (!hotel) {\r\n        return <div>Loading...</div>;\r\n    }\r\n    const mainImages = hotel.photoList?.slice(0, 1);\r\n    const otherImages = hotel.photoList?.slice(1);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"header\">\r\n                {mainImages && mainImages.length > 0 && (\r\n                    <div className=\"images-sidebar\">\r\n                        {mainImages.map((img, index) => (\r\n                            <img key={index} src={img.link} alt={`Hotel View ${index + 1}`} />\r\n                        ))}\r\n                    </div>\r\n                )}\r\n                <div className=\"header-info\">\r\n                    <h2>{hotel.name}</h2>\r\n                    <p style={{ whiteSpace: 'pre-line' }}>{hotel.description}</p>\r\n                    <Link to=\"/home\">Back to list</Link>\r\n                </div>\r\n            </div>\r\n            {otherImages && otherImages.length > 0 && (\r\n                <div className=\"main-images\">\r\n                    {otherImages.map((img, index) => (\r\n                        <img key={index} src={img.link} alt={`Hotel View ${index + 3}`} />\r\n                    ))}\r\n                </div>\r\n            )}\r\n            <div className=\"review-container\">\r\n                <h3>Reviews</h3>\r\n                {histories.map(history => (\r\n                    <div key={history.id} className=\"review\">\r\n                        <div className=\"review-details\">\r\n                            <p className=\"review-text\">{history.review}</p>\r\n                        </div>\r\n                        <div className=\"review-grade\">\r\n                            {history.grade}\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            {currentUser && (\r\n                <div className=\"add-review-form\">\r\n                    <h4>Add your review:</h4>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"form-label\">Check-in:</label>\r\n                        <input type=\"date\" className=\"form-input\" value={checkInDate} onChange={e => setCheckInDate(e.target.value)} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"form-label\">Check-out:</label>\r\n                        <input type=\"date\" className=\"form-input\" value={checkOutDate} onChange={e => setCheckOutDate(e.target.value)} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"form-label\">Total cost:</label>\r\n                        <input type=\"number\" className=\"form-input\" value={totalCost} onChange={e => setTotalCost(e.target.value)} min=\"0\" />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"form-label\">Review:</label>\r\n                        <textarea className=\"form-textarea\" value={newReview} onChange={e => setNewReview(e.target.value)} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"form-label\">Grade:</label>\r\n                        <input type=\"range\" className=\"form-input\" value={newGrade} min=\"1\" max=\"5\" onChange={e => setNewGrade(e.target.value)} />\r\n                    </div>\r\n                    <button className=\"form-button\" onClick={handleSubmitReview}>Submit Review</button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HotelDetails;\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\n//import { Switch, Route, Link } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\n\r\nimport AuthService from \"./services/auth.service\";\r\n\r\nimport Login from \"./components/Login\";\r\nimport Register from \"./components/Register\";\r\nimport Home from \"./components/Home\";\r\nimport Main from \"./components/Main\"\r\nimport Profile from \"./components/Profile\";\r\nimport BoardUser from \"./components/BoardUser\";\r\nimport BoardModerator from \"./components/BoardModerator\";\r\nimport BoardAdmin from \"./components/BoardAdmin\";\r\nimport Stats from \"./components/Stats\";\r\n\r\nimport EventBus from \"./common/EventBus\";\r\n\r\n//import React, { useState, useEffect } from \"react\";\r\nimport { Switch, Route, Link, BrowserRouter as Router } from \"react-router-dom\";\r\nimport HotelDetails from './components/HotelDetails'; // Убедитесь, что импортировали этот компонент\r\n\r\n\r\nconst App = () => {\r\n  const [showModeratorBoard, setShowModeratorBoard] = useState(false);\r\n  const [showAdminBoard, setShowAdminBoard] = useState(false);\r\n  const [currentUser, setCurrentUser] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    const user = AuthService.getCurrentUser();\r\n\r\n    if (user) {\r\n      setCurrentUser(user);\r\n      setShowModeratorBoard(user.roles.includes(\"ROLE_MODERATOR\"));\r\n      setShowAdminBoard(user.roles.includes(\"ROLE_ADMIN\"));\r\n    }\r\n\r\n    EventBus.on(\"logout\", () => {\r\n      logOut();\r\n    });\r\n\r\n    return () => {\r\n      EventBus.remove(\"logout\");\r\n    };\r\n  }, []);\r\n\r\n  const logOut = () => {\r\n    AuthService.logout();\r\n    setShowModeratorBoard(false);\r\n    setShowAdminBoard(false);\r\n    setCurrentUser(undefined);\r\n  };\r\n\r\n  return (\r\n      <div style={{\r\n        backgroundImage: \"url('https://sun9-61.userapi.com/impg/b2iC32PN4B7tSwckVwH74Rd2pCqihNfzOugQaw/pfC2ONrXUpU.jpg?size=1442x2160&quality=96&sign=30d851392093eddc42ccf1e5b753662d&type=album')\",\r\n        backgroundSize: 'cover',\r\n        backgroundAttachment: 'fixed',\r\n        minHeight: '100vh', // Убедитесь, что минимальная высота контейнера достаточна для заполнения экрана\r\n        width: '100%'\r\n      }}>\r\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\r\n          <Link to={\"/home\"} className=\"navbar-brand\">\r\n            Nature_Navigator\r\n          </Link>\r\n          <div className=\"navbar-nav mr-auto\">\r\n\r\n            <li className=\"nav-item\">\r\n              <Link to={\"/main\"} className=\"nav-link\">\r\n                Main\r\n              </Link>\r\n            </li>\r\n\r\n            <li className=\"nav-item\">\r\n              <Link to={\"/home\"} className=\"nav-link\">\r\n                Choose\r\n              </Link>\r\n            </li>\r\n\r\n\r\n\r\n            {showModeratorBoard && (\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/mod\"} className=\"nav-link\">\r\n                    Moderator Board\r\n                  </Link>\r\n                </li>\r\n            )}\r\n\r\n            {showAdminBoard && (\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/admin\"} className=\"nav-link\">\r\n                    Admin Board\r\n                  </Link>\r\n                </li>\r\n            )}\r\n\r\n            {currentUser && (\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/user\"} className=\"nav-link\">\r\n                    User\r\n                  </Link>\r\n                </li>\r\n            )}\r\n            {currentUser && (\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/stats\"} className=\"nav-link\">\r\n                    Stats\r\n                  </Link>\r\n                </li>\r\n            )}\r\n          </div>\r\n\r\n          {currentUser ? (\r\n              <div className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/profile\"} className=\"nav-link\">\r\n                    {currentUser.username}\r\n                  </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <a href=\"/login\" className=\"nav-link\" onClick={logOut}>\r\n                    LogOut\r\n                  </a>\r\n                </li>\r\n              </div>\r\n          ) : (\r\n              <div className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/login\"} className=\"nav-link\">\r\n                    Login\r\n                  </Link>\r\n                </li>\r\n\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/register\"} className=\"nav-link\">\r\n                    Sign Up\r\n                  </Link>\r\n                </li>\r\n              </div>\r\n          )}\r\n        </nav>\r\n\r\n        <div className=\"container mt-3\">\r\n          <Switch>\r\n            <Route exact path={[ \"/main\"]} component={Main} />\r\n            <Route exact path={[\"/\", \"/home\"]} component={Home} />\r\n            <Route exact path=\"/login\" component={Login} />\r\n            <Route exact path=\"/register\" component={Register} />\r\n            <Route exact path=\"/profile\" component={Profile} />\r\n            <Route path=\"/user\" component={BoardUser} />\r\n            <Route path=\"/mod\" component={BoardModerator} />\r\n            <Route path=\"/admin\" component={BoardAdmin} />\r\n            <Route path=\"/stats\" component={Stats} />\r\n\r\n\r\n            <Route path=\"/hotel/:id\" component={HotelDetails} />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport App from \"./App\";\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}